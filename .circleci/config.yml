version: 2.1

orbs:
  windows: circleci/windows@5.0
  general-platform-helpers: okta/general-platform-helpers@1.9
  platform-helpers: okta/platform-helpers@1
  python: circleci/python@2.0.3
  aws-cli: circleci/aws-cli@5.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  reversing-labs:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:8.0
    steps:
      - run:
          name: Manual HTTPS checkout (avoid SSH)
          command: |
            git --version
            rm -rf .git || true
            git init .
            git remote add origin https://github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME.git
            git fetch --depth=1 origin $CIRCLE_SHA1
            git checkout --force $CIRCLE_SHA1

      - run: dotnet --version

      - run:
          name: Build Binary to scan
          command: |
            # Build all projects 
            dotnet build Okta.AspNet.Abstractions/Okta.AspNet.Abstractions.csproj --configuration Release
            dotnet build Okta.AspNet/Okta.AspNet.csproj --configuration Release
            dotnet build Okta.AspNet.Test/Okta.AspNet.Test.csproj --configuration Release
            dotnet build Okta.AspNetCore/Okta.AspNetCore.csproj --configuration Release
            dotnet build Okta.AspNetCore.Test/Okta.AspNetCore.Test.csproj --configuration Release
            dotnet build Okta.AspNetCore.Mvc.IntegrationTest/Okta.AspNetCore.Mvc.IntegrationTest.csproj --configuration Release
            dotnet build Okta.AspNetCore.WebApi.IntegrationTest/Okta.AspNetCore.WebApi.IntegrationTest.csproj --configuration Release
            dotnet build Okta.AspNet.Abstractions.Test/Okta.AspNet.Abstractions.Test.csproj --configuration Release

      # Necessary to Install rl wrapper
      - run:
          name: Install Python and Setup Virtual Environment
          command: |
            apt-get update
            apt-get install -y curl python3 python3-pip python3-venv unzip
            python3 -m venv venv
            source venv/bin/activate
            pip install --upgrade pip

      # Download the scanner from Okta Security
      - run:
          name: Download Reverse Labs Scanner
          command: |
            curl https://dso-resources.oktasecurity.com/scanner \
              -H "x-api-key: $DSO_RLSECURE_TOKEN" \
              --output rl_wrapper-0.0.2+35ababa-py3-none-any.whl

      # Install the wrapper that was downloaded
      - run:
          name: Install RL Wrapper
          command: |
            source venv/bin/activate
            pip install ./rl_wrapper-0.0.2+35ababa-py3-none-any.whl

      # Setup the AWS profile
      - aws-cli/setup:
          profile_name: default
          role_arn: $AWS_ARN
          region: us-east-1

      # Get the credentials and save to env
      - run:
          name: Export AWS credentials to environment
          command: >-
            eval "$(aws configure export-credentials --profile default --format env)" 2> /dev/null

      # Run the wrapper, do not change anything here
      - run:
          name: Run Reversing Labs Wrapper Scanner
          command: |
            source venv/bin/activate
            rl-wrapper \
              --artifact ${CIRCLE_WORKING_DIRECTORY/#\~/$HOME} \
              --name $CIRCLE_PROJECT_REPONAME\
              --version $CIRCLE_SHA1\
              --repository $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME \
              --commit $CIRCLE_SHA1 \
              --build-env "circleci" \
              --suppress_output

  build:
    description: Run tests and build
    executor:
      name: windows/default
    environment:
      CIRCLE_CI: True
    steps:
      - run:
          name: Checkout with HTTPS
          command: |
            git clone https://github.com/okta/okta-aspnet.git .
            git checkout $env:CIRCLE_SHA1
      - run:
          name: "Build Okta ASP.NET"
          command: .\build.ps1
      - persist_to_workspace: # Allows for sharing of build-workspace (containing downloaded dependencies)
          root: .
          paths:
            - .
      - when:
          condition:
            equal: [ "<<pipeline.git.branch>>", "master" ]
          steps:
            - general-platform-helpers/step-artifacts-prepare-and-upload-windows:
                files-to-upload: "artifacts"
                location: "com/okta/devex/okta-aspnet"

  snyk-scan:
    docker:
      - image: "cimg/openjdk:13.0"
    steps:
      - attach_workspace: # Allows for sharing of build-workspace (containing downloaded dependencies) (optional)
          at: ~/project
      - general-platform-helpers/step-load-dependencies
      - general-platform-helpers/step-run-snyk-monitor:
          scan-all-projects: true
          skip-unresolved: false
          run-on-non-main: true
          detection-depth: 4
          additional-arguments: "--exclude=tools"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  "Build and Scan":
    jobs:
      - build
      - snyk-scan:
          name: execute-snyk
          context:
            - static-analysis
          requires:
            - build
      - platform-helpers/job-semgrep-scan:
          context:
            - static-analysis
          name: "Scan with Semgrep"
          requires:
            - build
      - reversing-labs:
          context:
            - static-analysis
          requires:
            - build